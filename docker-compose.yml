version: "3.4"

services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: app_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?serverVersion=${POSTGRES_VERSION:-14}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-localhost}

  nginx:
    image: nginx:1.21
    restart: unless-stopped
    ports:
      - "${NGINX_PUBLISHED_PORT}:80"
    volumes:
      - ./app:/srv/app
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - php_socket:/var/run/php
    depends_on:
      - php
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      retries: 3
      timeout: 5s
      
#  pwa:
#    build:
#      context: ./pwa
#      target: prod
#    environment:
#      NEXT_PUBLIC_ENTRYPOINT: http://caddy


###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - db_data:/var/lib/postgresql/data
###< doctrine/doctrine-bundle ###

volumes:
  php_socket:
###> doctrine/doctrine-bundle ###
  db_data:
###< doctrine/doctrine-bundle ###
